<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AffectedByFog" xml:space="preserve">
    <value>Воздействие тумана</value>
  </data>
  <data name="AffectedByLight" xml:space="preserve">
    <value>Воздействие света</value>
  </data>
  <data name="AmbientLight" xml:space="preserve">
    <value>Рассеянный свет</value>
  </data>
  <data name="Angle" xml:space="preserve">
    <value>Поворот</value>
  </data>
  <data name="Blending" xml:space="preserve">
    <value>Смешивание</value>
  </data>
  <data name="BoundGroup" xml:space="preserve">
    <value>Столкновения и габариты</value>
  </data>
  <data name="BrokenGroup" xml:space="preserve">
    <value>Разрушенный вид</value>
  </data>
  <data name="DefaultGroup" xml:space="preserve">
    <value>Основное</value>
  </data>
  <data name="EmptyObject" xml:space="preserve">
    <value>Выберите объект для изменения свойств</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>Включен</value>
  </data>
  <data name="EnvironmentInfo" xml:space="preserve">
    <value>Окружение карты</value>
  </data>
  <data name="EnvironmentInfoDesc" xml:space="preserve">
    <value>Параметры неба, освещения и звуков</value>
  </data>
  <data name="EnvLightGroup" xml:space="preserve">
    <value>Освещение</value>
  </data>
  <data name="Facing" xml:space="preserve">
    <value>Режим вращения</value>
  </data>
  <data name="FogColor" xml:space="preserve">
    <value>Цвет тумана</value>
  </data>
  <data name="FogFar" xml:space="preserve">
    <value>Начало</value>
  </data>
  <data name="FogGroup" xml:space="preserve">
    <value>Туман</value>
  </data>
  <data name="FogNear" xml:space="preserve">
    <value>Конец</value>
  </data>
  <data name="LevelChange" xml:space="preserve">
    <value>Финиш</value>
  </data>
  <data name="LevelChangeDesc" xml:space="preserve">
    <value>Зона перехода на другую карту</value>
  </data>
  <data name="Light" xml:space="preserve">
    <value>Лампа</value>
  </data>
  <data name="LightDesc" xml:space="preserve">
    <value>Создаёт светлые участки на карте</value>
  </data>
  <data name="Offset" xml:space="preserve">
    <value>Сдвиг</value>
  </data>
  <data name="Player" xml:space="preserve">
    <value>Игрок</value>
  </data>
  <data name="PlayerDesc" xml:space="preserve">
    <value>Точка появления игрока на уровне</value>
  </data>
  <data name="ProjectAuthor" xml:space="preserve">
    <value>Автор</value>
  </data>
  <data name="ProjectName" xml:space="preserve">
    <value>Название</value>
  </data>
  <data name="Scale" xml:space="preserve">
    <value>Размер</value>
  </data>
  <data name="SizeGroup" xml:space="preserve">
    <value>Размеры</value>
  </data>
  <data name="SkyBack" xml:space="preserve">
    <value>Зад (-Z)</value>
  </data>
  <data name="SkyBottom" xml:space="preserve">
    <value>Низ (-Y)</value>
  </data>
  <data name="SkyFront" xml:space="preserve">
    <value>Перед (+Z)</value>
  </data>
  <data name="SkyGroup" xml:space="preserve">
    <value>Небо</value>
  </data>
  <data name="SkyLeft" xml:space="preserve">
    <value>Лево (-X)</value>
  </data>
  <data name="SkyRight" xml:space="preserve">
    <value>Право (+X)</value>
  </data>
  <data name="SkyTop" xml:space="preserve">
    <value>Верх (+Y)</value>
  </data>
  <data name="Solid" xml:space="preserve">
    <value>Твёрдый</value>
  </data>
  <data name="Sound" xml:space="preserve">
    <value>Звук</value>
  </data>
  <data name="SoundDesc" xml:space="preserve">
    <value>Источник звука</value>
  </data>
  <data name="Sprite" xml:space="preserve">
    <value>Спрайт</value>
  </data>
  <data name="SpriteDesc" xml:space="preserve">
    <value>Объект для декорирования карт</value>
  </data>
  <data name="Texture" xml:space="preserve">
    <value>Текстура</value>
  </data>
  <data name="Tint" xml:space="preserve">
    <value>Оттенок</value>
  </data>
  <data name="VisualGroup" xml:space="preserve">
    <value>Внешний вид</value>
  </data>
  <data name="Door" xml:space="preserve">
    <value>Дверь</value>
  </data>
  <data name="DoorDesc" xml:space="preserve">
    <value>Объект, разделяющий комнаты</value>
  </data>
</root>